name: Continuous Integration

on: [push, pull_request]

env:
  CACHE_VERSION: 1

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      MIX_ENV: "test"

    strategy:
      fail-fast: false
      matrix:
        elixir: ["1.10.2"]
        include:
          - elixir: "1.10.2"
            otp: "22.2.8"

    services:
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_PASSWORD: postgres
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-elixir@v1
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}
      - name: Cache deps
        uses: actions/cache@v1
        with:
          path: deps
          key: ${{ env.CACHE_VERSION }}-deps-build-${{ env.MIX_ENV }}-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('mix.lock') }}-unit-tests
      - name: Cache _build
        uses: actions/cache@v1
        with:
          path: _build/${{ env.MIX_ENV }}
          key: ${{ env.CACHE_VERSION }}-_build-${{ env.MIX_ENV }}-${{ matrix.otp }}-${{ matrix.elixir }}-unit-tests
      - name: Install dependencies
        run: mix deps.get
      - name: Compile app
        run: mix compile --force --warnings-as-errors
      - name: Run unit tests
        run: mix test
      - run: mix format --check-formatted
      - run: mix credo --strict


  build_container:
    name: Build docker container
    needs: [test]
    runs-on: ubuntu-latest
    services:
      # Allow accessing localhost ports from docker containers.
      # See https://github.com/qoomon/docker-host
      dockerhost:
        image: qoomon/docker-host
        options: >-
          --cap-add=NET_ADMIN
          --cap-add=NET_RAW
          --restart on-failure
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: zoneinator_prod
          POSTGRES_PASSWORD: postgres

    env:
      DATABASE_URL: "ecto://postgres:postgres@dockerhost/zoneinator_prod"
      SECRET_KEY_BASE: "csHMFw92/Rkb3p6JiG936DvlM9h/v7MF900pqseNwSv+vOEPOphsVdZMs5Jm92zL"

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-elixir@v1
        with:
          otp-version: 22.2.8
          elixir-version: 1.10.2
      - name: Build container
        run: docker build -t zoneinator .
      - name: Migrate database
        run: docker run -e DATABASE_URL -e SECRET_KEY_BASE --network ${{ job.container.network }} zoneinator bin/zoneinator eval "Zoneinator.Release.migrate()"
      - name: Start app
        id: start_web_container
        # Echoing ::set-output allows the container id to be used in future steps
        run: echo ::set-output name=container_id::$(docker run -e DATABASE_URL -e SECRET_KEY_BASE --network ${{ job.container.network }} -p 4000:4000 -d zoneinator bin/zoneinator start)
      - name: Wait for app to be ready
        env:
          WEB_CONTAINER_ID: ${{ steps.start_web_container.outputs.container_id }}
        # From http://jeromebelleman.gitlab.io/posts/devops/until/
        run: timeout 60 bash -c "until docker inspect $WEB_CONTAINER_ID | jq -e '.[0].State.Health.Status == \"healthy\"' ; do sleep 2; done"
      - name: Install deps and build integration tester
        run: mix do deps.get, compile --warnings-as-errors
        env:
          MIX_ENV: test
        working-directory: ./integration_tester
      - name: Run Integration Tests
        run: mix test
        env:
          MIX_ENV: test
        working-directory: ./integration_tester
      - name: Output Docker logs
        env:
          WEB_CONTAINER_ID: ${{ steps.start_web_container.outputs.container_id }}
        run: docker logs $WEB_CONTAINER_ID || true
        if: always()
      - name: Stop app container
        env:
          WEB_CONTAINER_ID: ${{ steps.start_web_container.outputs.container_id }}
        run: docker stop $WEB_CONTAINER_ID || true
        if: always()
